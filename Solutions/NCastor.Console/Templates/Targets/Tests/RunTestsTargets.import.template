<?xml version="1.0" encoding="utf-8" ?>

<!--
<copyright file="{{ FileName }}" company="Juan Pablo Olmos Lara (Jupaol)">

  jupaol@hotmail.com
  jupaoljpol@gmail.com
  http://jupaol.blogspot.com/

  Copyright (c) 2012, Juan Pablo Olmos Lara (Jupaol)
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, 
  are permitted provided that the following conditions are met:

  * Redistributions of source code must retain the above copyright notice, 
    this list of conditions and the following disclaimer.
  * Redistributions in binary form must reproduce the above copyright notice, 
    this list of conditions and the following disclaimer in the documentation 
    a/nd/or other materials provided with the distribution.
  * Neither the name of the Juan Pablo Olmos Lara (Jupaol) nor the names of its contributors may be 
    used to endorse or promote products derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED 
  WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A 
  PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR 
  ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS 
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, 
  OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, 
  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

</copyright>
-->

<!-->
"Your stuff"

Your custom tests targets
-->

<Project DefaultTargets="All" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <!-- TODO: Place your custom tests targets here -->

  <!--
  This is the full dependency tree for the tests action, you can customize it but just remember there are some actions
  that dependent from others.
  
    <PropertyGroup>
    <RunTestsDependsOn>
      $(RunTestsRequiredActions);
      BeforeRunTests;

      RunNUnitTests;
      RunMSTests;
      RunMSpecTests;

      RunNUnitTestsWithOpenCover;
      RunMSTestTestsWithOpenCover;
      RunMSpecTestsWithOpenCover;

      CoreRunTests;
      AfterRunTests;
      $(RunTestsExpectedActions);
    </RunTestsDependsOn>
  </PropertyGroup>
  
  The dependencies that can be safetly removed are:
  
      RunNUnitTests;
      RunMSTests;
      RunMSpecTests;

      RunNUnitTestsWithOpenCover;
      RunMSTestTestsWithOpenCover;
      RunMSpecTestsWithOpenCover;
      
      Note these tests, should be run mutually exclusive, which meand that if you want to run NUnit tests you need 
      to specify "RunNUnitTests" or "RunNUnitTestsWithOpenCover" bit not both
      
      If you specify both, the results of the previous tests will be deleted
      
      On the other hand you can specify one type of tests for each technology.
      
      *** Running tests:*** 
      To run tests you need to override the following targets:
      
      "CorerSettingInstrumentationAssemblies"
      In this target you specify the assemblies you want to instrument 
      (only if you want to run code coverage with your tests, otherwise you do not need to override this target)
      
      Example

      <Target Name="CorerSettingInstrumentationAssemblies">
        <ItemGroup>
          <AssembliesToInstrument Include="$(TestAssembliesPath)\NCastor.Console.exe;" />
        </ItemGroup>
      </Target>
      
      - Running NUnit Tests -
      To run your NUnit tests you need to override the following target:
      
      "CoreSettingNUnitTestingAssemblies"
      
      Example:
      
      <Target Name="CoreSettingNUnitTestingAssemblies">
        <ItemGroup>
          <NUnitAssemblies Include="
                              $(TestAssembliesPath)\NCastor.Console.Tests.dll;
                              $(TestAssembliesPath)\NCastor.Console.Integration.Tests.dll;" />
        </ItemGroup>
      </Target>

      - Runing MSTest Tests -
      To run MStest tests you need to override the following target:
      
      "CoreSettingMSTestTestingAssemblies"
      
      Example:
      
      <Target Name="CoreSettingMSTestTestingAssemblies">
        <ItemGroup>
          <MSTestContainers Include="
                              $(TestAssembliesPath)\NCastor.Console.Tests.dll;
                              $(TestAssembliesPath)\NCastor.Console.Integration.Tests.dll;" />
        </ItemGroup>
      </Target>
      
      - Runing MSpec Tests -
      To run MStest tests you need to override the following target:
      
      "CoreSettingMSpecTestingAssemblies"
      
      Example:
      
      <Target Name="CoreSettingMSpecTestingAssemblies">
        <ItemGroup>
          <MSpecAssemblies Include="
                              $(TestAssembliesPath)\NCastor.Console.Tests.dll;
                              $(TestAssembliesPath)\NCastor.Console.Integration.Tests.dll;" />
        </ItemGroup>
      </Target>

  -->

  <!--
  Here we are overriding the default tests actions. This is to show you how you can control all the steps being executed
  -->

  <PropertyGroup>
    <RunTestsDependsOn>
      $(RunTestsRequiredActions);
      BeforeRunTests;

      RunNUnitTests;
      RunMSTests;
      RunMSpecTests;

      RunNUnitTestsWithOpenCover;
      RunMSTestTestsWithOpenCover;
      RunMSpecTestsWithOpenCover;

      CoreRunTests;
      AfterRunTests;
      $(RunTestsExpectedActions);
    </RunTestsDependsOn>
  </PropertyGroup>
  <Target Name="RunTests" DependsOnTargets="$(RunTestsDependsOn)" />
  <!--
  This is a custom tests target using the minimum actions required, in this case it actually just creates folders,
  you need to specify at least one type of test to execute
  -->

  <PropertyGroup>
    <RunTestsLiteDependsOn>
      $(RunTestsRequiredActions);
      CoreRunTests;
      $(RunTestsExpectedActions);
    </RunTestsLiteDependsOn>
  </PropertyGroup>
  <Target Name="RunTestsLite" DependsOnTargets="$(RunTestsLiteDependsOn)" />

</Project>
