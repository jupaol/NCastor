<?xml version="1.0" encoding="utf-8" ?>

<!--
<copyright file="RunMSpecTests.target" company="Juan Pablo Olmos Lara (Jupaol)">

  jupaol@hotmail.com
  http://jupaol.blogspot.com/

</copyright>
-->

<Project DefaultTargets="All" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <PropertyGroup>
    <RunMSpecTestsDependsOn>
      SettingMSpecTestingAssemblies;
      ValidateMSpecProperties;
      CleanMSpecArtefactFolders;
      CreateMSpecArtefactFolders;
      BeforeRunMSpecTests;
      CoreRunMSpecTests;
      AfterRunMSpecTests;
      TransformMSpecXmlToJUnitXml;
    </RunMSpecTestsDependsOn>
  </PropertyGroup>

  <Target Name="RunMSpecTests" DependsOnTargets="$(RunMSpecTestsDependsOn)"/>

  <!-- To be overriden by the user -->
  <Target Name="BeforeRunMSpecTests" />
  <Target Name="AfterRunMSpecTests" />

  <Target Name="CoreRunMSpecTests" >

    <Message Text="$(LoggingMessagePrefix) Running all the MSpec unit tests specified in the (MSpecAssemblies) item..." Importance="high" />

    <Message Text="$(LoggingMessagePrefix) Parsing all the MSPec assemblies to test specified in the (MSpecAssemblies) item..." Importance="normal" />
    <ItemGroup>
      <_MSpecAssemblies Include="@(MSpecAssemblies->'&quot;%(Identity)&quot;')" />
    </ItemGroup>

    <Message Text="$(LoggingMessagePrefix) Setting up MSpec arguments..." Importance="normal" />
    <PropertyGroup>
      <_MSpecOptions> --xml "$(MSpecXmlReportFilePath)" --html "$(MSpecHtmlReporthFilePath)" $(MSpecRunnerArguments)</_MSpecOptions>
      <_MSpecCommand>"$(MSPecRunner)" $(_MSpecOptions) @(_MSpecAssemblies, ' ')</_MSpecCommand>
    </PropertyGroup>

    <Message Text="$(LoggingMessagePrefix) Running the MSpec unit tests..." Importance="normal" />
    <Exec ContinueOnError="true" Command="$(_MSpecCommand)">
      <Output TaskParameter="exitcode" ItemName="ErrorsOcurredWhenRunningMSpecTests"/>
    </Exec>
    
  </Target>  
  
</Project>
